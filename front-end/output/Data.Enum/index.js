// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Char = require("Data.Char");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Cardinality = function (x) {
    return x;
};
var Enum = function (__superclass_Prelude$dotBounded_0, cardinality, fromEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_342) {
    return _342;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["*"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var tupleToEnum = function (__dict_Enum_2) {
    return function (__dict_Enum_3) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_2)(Prelude["/"](Prelude.moduloSemiringInt)(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_3)(Prelude.mod(Prelude.moduloSemiringInt)(n)(runCardinality(cardb))));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_4) {
    return function (c) {
        return Cardinality(Prelude["+"](Prelude.semiringInt)(Prelude.one(Prelude.semiringInt))(runCardinality(c)));
    };
};
var maybeToEnum = function (__dict_Enum_5) {
    return function (carda) {
        return function (n) {
            if (Prelude["<="](Prelude.ordInt)(n)(runCardinality(maybeCardinality(__dict_Enum_5)(carda)))) {
                var _469 = Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt));
                if (_469) {
                    return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                };
                if (!_469) {
                    return Data_Maybe.Just.create(toEnum(__dict_Enum_5)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))));
                };
                throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 138, column 1 - line 139, column 1: " + [ _469.constructor.name ]);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var _470 = Prelude["<="](Prelude.ordInt)(e)(to);
                if (_470) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, Prelude["+"](Prelude.semiringInt)(e)(step)));
                };
                if (!_470) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 103, column 1 - line 104, column 1: " + [ _470.constructor.name ]);
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(Prelude.one(Prelude.semiringInt));
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_6) {
    return function (__dict_Enum_7) {
        return function (cardb) {
            return function (_345) {
                return Prelude["+"](Prelude.semiringInt)(Prelude["*"](Prelude.semiringInt)(fromEnum(__dict_Enum_6)(_345.value0))(runCardinality(cardb)))(fromEnum(__dict_Enum_7)(_345.value1));
            };
        };
    };
};
var enumFromTo = function (__dict_Enum_8) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_8)(b);
            var a$prime = fromEnum(__dict_Enum_8)(a);
            return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_8))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_9) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_9)(c);
                var b$prime = fromEnum(__dict_Enum_9)(b);
                var a$prime = fromEnum(__dict_Enum_9)(a);
                return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_9))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(Prelude["-"](Prelude.ringInt)(b$prime)(a$prime))(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (carda) {
            return function (_346) {
                if (_346 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_10)(_346.value0);
                };
                if (_346 instanceof Data_Either.Right) {
                    return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_11)(_346.value0))(runCardinality(carda));
                };
                throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 197, column 1 - line 198, column 1: " + [ carda.constructor.name, _346.constructor.name ]);
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["+"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    var _479 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(carda)));
                    if (_479) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_14)(n));
                    };
                    if (!_479) {
                        var _480 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(runCardinality(carda)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(eitherCardinality(__dict_Enum_14)(__dict_Enum_15)(carda)(cardb))));
                        if (_480) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_15)(Prelude["-"](Prelude.ringInt)(n)(runCardinality(carda))));
                        };
                        if (!_480) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match: " + [ _480.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 189, column 1 - line 190, column 1: " + [ _479.constructor.name ]);
                };
            };
        };
    };
};
var defaultToEnum = function (succ$prime) {
    return function (bottom$prime) {
        return function (n) {
            if (Prelude["<"](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return Data_Maybe.Nothing.value;
            };
            if (Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return new Data_Maybe.Just(bottom$prime);
            };
            if (Prelude.otherwise) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(succ$prime)(bottom$prime)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))))(succ$prime);
            };
            throw new Error("Failed pattern match: " + [ succ$prime.constructor.name, bottom$prime.constructor.name, n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["+"](Prelude.semiringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["-"](Prelude.ringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(Prelude.zero(Prelude.semiringInt))(function (prd) {
            return Prelude["+"](Prelude.semiringInt)(defaultFromEnum(pred$prime)(prd))(Prelude.one(Prelude.semiringInt));
        })(pred$prime(e));
    };
};
var charToEnum = function (n) {
    if (Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(0))(Prelude["<="](Prelude.ordInt)(n)(65535))) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(n));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Prelude.boundedChar;
}, 65536, charFromEnum, defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.boundedEither(__dict_Enum_16["__superclass_Prelude.Bounded_0"]())(__dict_Enum_17["__superclass_Prelude.Bounded_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), function (_353) {
            if (_353 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_16)(_353.value0));
            };
            if (_353 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Prelude.top(__dict_Enum_16["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_17)(_353.value0));
            };
            throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _353.constructor.name ]);
        }, function (_352) {
            if (_352 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Prelude.bottom(__dict_Enum_17["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_16)(_352.value0));
            };
            if (_352 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_17)(_352.value0));
            };
            throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _352.constructor.name ]);
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), function (_349) {
        if (_349 instanceof Data_Maybe.Nothing) {
            return Prelude.zero(Prelude.semiringInt);
        };
        if (_349 instanceof Data_Maybe.Just) {
            return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_18)(_349.value0))(Prelude.one(Prelude.semiringInt));
        };
        throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _349.constructor.name ]);
    }, function (_348) {
        if (_348 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_348 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_348.value0));
        };
        throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _348.constructor.name ]);
    }, function (_347) {
        if (_347 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]())));
        };
        if (_347 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_347.value0));
        };
        throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _347.constructor.name ]);
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.boundedTuple(__dict_Enum_19["__superclass_Prelude.Bounded_0"]())(__dict_Enum_20["__superclass_Prelude.Bounded_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), function (_351) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(pred(__dict_Enum_19)(_351.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_351.value0)))(pred(__dict_Enum_20)(_351.value1));
        }, function (_350) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(succ(__dict_Enum_19)(_350.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_350.value0)))(succ(__dict_Enum_20)(_350.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_343) {
    if (!_343) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_344) {
    if (_344) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var enumBoolean = new Enum(function () {
    return Prelude.boundedBoolean;
}, 2, defaultFromEnum(booleanPred), booleanPred, booleanSucc, defaultToEnum(booleanSucc)(false));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    intStepFromTo: intStepFromTo, 
    intFromTo: intFromTo, 
    defaultFromEnum: defaultFromEnum, 
    defaultToEnum: defaultToEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    toEnum: toEnum, 
    succ: succ, 
    runCardinality: runCardinality, 
    pred: pred, 
    fromEnum: fromEnum, 
    cardinality: cardinality, 
    enumChar: enumChar, 
    enumMaybe: enumMaybe, 
    enumBoolean: enumBoolean, 
    enumTuple: enumTuple, 
    enumEither: enumEither
};
