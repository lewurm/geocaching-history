// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array_ST = require("Data.Array.ST");
var Prelude = require("Prelude");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Traversable = require("Data.Traversable");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _10 = Data_Array_ST.emptySTArray();
            var _9 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _8 = Control_Monad_ST.readSTRef(_9)();
                    return (function () {
                        var _468 = f(_8);
                        if (_468 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        if (_468 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_10)(_468.value0.value0)();
                                Control_Monad_ST.writeSTRef(_9)(_468.value0.value1)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 29, column 1 - line 49, column 1: " + [ _468.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_10)();
        }));
    };
});
var replicate = function (__dict_Unfoldable_0) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var _472 = Prelude["<="](Prelude.ordInt)(i)(0);
                if (_472) {
                    return Data_Maybe.Nothing.value;
                };
                if (!_472) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, Prelude["-"](Prelude.ringInt)(i)(1)));
                };
                throw new Error("Failed pattern match at /home/travis/build/lewurm/geocaching-history/front-end/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 52, column 5 - line 53, column 5: " + [ _472.constructor.name ]);
            };
            return unfoldr(__dict_Unfoldable_0)(step)(n);
        };
    };
};
var replicateA = function (__dict_Applicative_1) {
    return function (__dict_Unfoldable_2) {
        return function (__dict_Traversable_3) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(__dict_Traversable_3)(__dict_Applicative_1)(replicate(__dict_Unfoldable_2)(n)(m));
                };
            };
        };
    };
};
var singleton = function (__dict_Unfoldable_4) {
    return replicate(__dict_Unfoldable_4)(1);
};
var none = function (__dict_Unfoldable_5) {
    return unfoldr(__dict_Unfoldable_5)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.unit);
};
module.exports = {
    Unfoldable: Unfoldable, 
    singleton: singleton, 
    none: none, 
    replicateA: replicateA, 
    replicate: replicate, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};
